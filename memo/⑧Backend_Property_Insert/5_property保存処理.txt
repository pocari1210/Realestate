
5_property保存処理

propertyの保存処理を実装

◆ルートの編集◆

ディレクトリ
\routes\web.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

    // property:更新処理のルート
    Route::post('/update/property', 'UpdateProperty')
      ->name('update.property');

////////////////////////////////////////////////////////////////////////////////////////////

◆ビューの編集(遷移元)◆

ディレクトリ
\resources\views\backend\property\edit_property.blade.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

<form method="post" action="{{ route('update.property') }}" id="myForm" enctype="multipart/form-data">


<select name="property_status" class="form-select" id="exampleFormControlSelect1">
  <option selected="" disabled="">Select Status</option>

<option value="rent" {{ $property->property_status == 'rent' ? 'selected' : '' }} >For Rent</option>
<option value="buy" {{ $property->property_status == 'buy' ? 'selected' : '' }}>For Buy</option> 
  </select>

<option selected="" disabled="">Select Type</option>
  @foreach($propertytype as $ptype)
     <option value="{{ $ptype->id }}" {{ $ptype->id == $property->ptype_id ? 'selected' : '' }}>{{ $ptype->type_name }}</option>
  @endforeach

//////////////////////////////////////////////////////////////////////////////////

◆コントローラーの編集◆

ディレクトリ
\app\Http\Controllers\Backend\PropertyController.php

・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・・

  public function UpdateProperty(Request $request)
  {

    $amen = $request->amenities_id;
    $amenites = implode(",", $amen);

    $property_id = $request->id;

    Property::findOrFail($property_id)->update([

      'ptype_id' => $request->ptype_id,
      'amenities_id' => $amenites,
      'property_name' => $request->property_name,
      'property_slug' => strtolower(str_replace(' ', '-', $request->property_name)),
      'property_status' => $request->property_status,

      'lowest_price' => $request->lowest_price,
      'max_price' => $request->max_price,
      'short_descp' => $request->short_descp,
      'long_descp' => $request->long_descp,
      'bedrooms' => $request->bedrooms,
      'bathrooms' => $request->bathrooms,
      'garage' => $request->garage,
      'garage_size' => $request->garage_size,

      'property_size' => $request->property_size,
      'property_video' => $request->property_video,
      'address' => $request->address,
      'city' => $request->city,
      'state' => $request->state,
      'postal_code' => $request->postal_code,

      'neighborhood' => $request->neighborhood,
      'latitude' => $request->latitude,
      'longitude' => $request->longitude,
      'featured' => $request->featured,
      'hot' => $request->hot,
      'agent_id' => $request->agent_id,
      'updated_at' => Carbon::now(),

    ]);

    $notification = array(
      'message' => 'Propertyの更新が成功しました',
      'alert-type' => 'success'
    );

    return redirect()->route('all.property')->with($notification);
  } // End Method 